(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{356:function(e,i,n){e.exports=n.p+"assets/img/pixel.ade39c9a.jpg"},392:function(e,i,n){"use strict";n.r(i);var t=n(26),p=Object(t.a)({},(function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"备注"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[e._v("#")]),e._v(" 备注")]),e._v(" "),t("h3",{attrs:{id:"布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[e._v("#")]),e._v(" 布局")]),e._v(" "),t("p",[e._v("with 的含义：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const deviceWidth = Dimensions.get('window').width;      //设备的宽度\nconst deviceHeight = Dimensions.get('window').height;    //设备的高度\nconst pixelRatio = PixelRatio.get();      //当前设备的像素密度\n\n")])])]),t("p",[e._v("环境: 小米6 （屏幕 1080 x 1920）"),t("br"),e._v('\n"react": "16.13.1",'),t("br"),e._v('\n"react-native": "0.63.4"')]),e._v(" "),t("p",[e._v("deviceWidth: 360\ndeviceHeight: 640\npixelRatio: 3")]),e._v(" "),t("p",[e._v("当设置 width: 360, 表现为 = 屏幕宽度， 即：")]),e._v(" "),t("p",[e._v("1080  --3倍-- 360\n3  --3倍-- 1\n0.3  --3倍-- 0.1  -----\x3e 四舍五入 0 （表现为不显示）\n0.6  --3倍-- 0.2  -----\x3e 四舍五入 1\n0.9  --3倍-- 0.3  -----\x3e 四舍五入 1\n1.5  --3倍-- 0.5  -----\x3e 四舍五入 2")]),e._v(" "),t("p",[e._v("在实际开发中，UI 给的设计稿基本都是 750，因为封装单位转换函数的时候，需要考虑的有：")]),e._v(" "),t("p",[e._v("1080  --3倍-- 360  ---- 750\n3     --3倍-- 1    ---- 2.08333\ny     --3倍-- x    ---- 1\n1     --3倍-- 0.3333    ---- 0.694")]),e._v(" "),t("p",[e._v("在开发的时候，我们设置的是x;")]),e._v(" "),t("p",[e._v("360/x = 750/1\nx = （360/750）*1\nx = 0.48 * 设计稿尺寸")]),e._v(" "),t("p",[e._v("在封装函数计算你函数的时候，需要判断 是否达到1px 边界\n（虽然现代手机屏幕素质基本都大于设计稿的750， 在设计稿最小值为1的情况下基本不会达到边界）\n以及提供 1px 功能")]),e._v(" "),t("p",[e._v("viewport像素，物理像素，逻辑像素，渲染像素：")]),e._v(" "),t("p",[t("img",{attrs:{src:n(356),alt:"pixel"}})]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.zhihu.com/question/313971223",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考资料"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"物理像素-physical-pixel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#物理像素-physical-pixel"}},[e._v("#")]),e._v(" 物理像素（physical pixel）")]),e._v(" "),t("p",[e._v("就是反映显示屏的硬件条件，反映的就是显示屏内部led灯的数量，\n可以简单理解，一组三色led代表一个物理像素，\n当然根据屏幕物理属性以及处理led的方法不一样。强调这是物理的，\n因为这是一个纯硬件指标。比如我把屏幕锯了一半，物理像素就只有一半。")]),e._v(" "),t("h4",{attrs:{id:"渲染像素-render-pixel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染像素-render-pixel"}},[e._v("#")]),e._v(" 渲染像素（render pixel）")]),e._v(" "),t("p",[e._v("则是在系统内部对物理像素的分配进行再一次的调整，\n在pc上，渲染像素其实就是设置里边的分辨率。\n对于显示设备，系统为显示设备提供渲染尺寸，\n由显示设备的“缩放引擎”（带存储器阵列的数字视频处理器）处理。\n这种“缩放引擎”一般内部有一系列的合理分辨率和一个推荐分辨率。\n一般推荐分辨率就是最大渲染像素，也是设备的物理分辨率（为了最佳表现）。\n这是一个软硬件（偏硬）结合的缩放方案。\n由于部分设备不能设置渲染像素，所以下文部分场景为了简化模型，直接跳过渲染像素，直接等同于物理像素")]),e._v(" "),t("h5",{attrs:{id:"逻辑像素-点-device-point-device-pixel-point"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑像素-点-device-point-device-pixel-point"}},[e._v("#")]),e._v(" 逻辑像素/点（device point / device pixel / point ）")]),e._v(" "),t("p",[e._v("是为了调和距离不一样导致的差异，将所有设备根据距离，\n透视缩放到一个相等水平的观看距离之后得到的尺寸，是一个抽象的概念，\n这个单位就是ios开发的px，安卓开发的dp。\n对于pc，包括win（8+） linux，mac，由各自系统的或者对应软件（比如webview内部）\n提供的图像界面处理引擎处理进行缩放在win上，\n可以通过显示设置缩放比例来调整部分应用的逻辑像素。\n对于linux，可以通过x和wayland的缩放比例来调整，\n而苹果，众所周知的hidpi但是，由于这个是一个纯软件的方案，\n如果部分软件不遵循开发规则，或者使用老旧的api，\n就会导致逻辑像素不合理，导致缩放问题。例如win10中部分旧的软件在高分屏的设备会导致界面偏小。\n因为他们实际是使用的是渲染像素而不是逻辑像素各种设备，\n手机，平板，笔记本等逻辑像素手机：逻辑像素在3xx-4xx（短边）之间平板：10寸平板7xx-8xx（短边）笔记本：13寸 1280 （长边）24寸显示屏：1920（长边）\n你会发现如果设置width=device-width下，无论是否高分屏，在浏览器得到的screen.width仍然符合上述的尺寸逻辑像素的引入，\n简单来说，就是为了消除了不同屏幕观看距离和不同ppi（见下文）之间的差异，衍生出来的一个虚拟的尺寸")]),e._v(" "),t("h4",{attrs:{id:"ppi-pixel-per-inch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ppi-pixel-per-inch"}},[e._v("#")]),e._v(" ppi（pixel per inch）")]),e._v(" "),t("p",[e._v("每英寸像素，指的是屏幕在每英寸的物理像素，更高的ppi意味着屏幕的清晰度更佳。\n所谓高分屏，其实就是指ppi大于同类设备的屏幕。\n比如对于桌面设备，大于96ppi。对于移动设备，大于160ppi所谓视网膜屏，\n其实就是指在该观看距离内超出人类的辨认能力的屏幕。\n比如对于桌面设备，大于192ppi。对于移动设备大于326ppippi，\n对于移动设备而言，一般来说ppi以160为一个档次也就是假设一个ppi160，\n2寸x3寸的屏幕，物理像素应该是320x480。同理ppi320，同样尺寸的屏幕，\n物理像素是640x960由于它们尺寸一致，假设它们观看距离一致，那么消除掉ppi的影响，\n他们的逻辑像素是一致的也就是逻辑像素长度 = 物理像素长度 * 160 / ppi得出都是 320 x 480当然，\n由于生产标准不一致，不可能做到绝对的160ppi作为标准，所以ppi的等级划分是动态的")])])}),[],!1,null,null,null);i.default=p.exports}}]);